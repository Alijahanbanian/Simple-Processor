// megafunction wizard: %LPM_MUX%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: LPM_MUX 

// ============================================================
// File Name: k.v
// Megafunction Name(s):
// 			LPM_MUX
//
// Simulation Library Files(s):
// 			lpm
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 20.1.0 Build 711 06/05/2020 SJ Lite Edition
// ************************************************************


//Copyright (C) 2020  Intel Corporation. All rights reserved.
//Your use of Intel Corporation's design tools, logic functions 
//and other software and tools, and any partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Intel Program License 
//Subscription Agreement, the Intel Quartus Prime License Agreement,
//the Intel FPGA IP License Agreement, or other applicable license
//agreement, including, without limitation, that your use is for
//the sole purpose of programming logic devices manufactured by
//Intel and sold by Intel or its authorized distributors.  Please
//refer to the applicable agreement for further details, at
//https://fpgasoftware.intel.com/eula.


//lpm_mux DEVICE_FAMILY="Cyclone V" LPM_SIZE=10 LPM_WIDTH=9 LPM_WIDTHS=4 data result sel
//VERSION_BEGIN 20.1 cbx_lpm_mux 2020:06:05:12:04:51:SJ cbx_mgl 2020:06:05:12:11:10:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463


//synthesis_resources = lut 45 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  k_mux
	( 
	data,
	result,
	sel) /* synthesis synthesis_clearbox=1 */;
	input   [89:0]  data;
	output   [8:0]  result;
	input   [3:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [89:0]  data;
	tri0   [3:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire	wire_l1_w0_n0_mux_dataout;
	wire	wire_l1_w0_n1_mux_dataout;
	wire	wire_l1_w0_n2_mux_dataout;
	wire	wire_l1_w0_n3_mux_dataout;
	wire	wire_l1_w0_n4_mux_dataout;
	wire	wire_l1_w0_n5_mux_dataout;
	wire	wire_l1_w0_n6_mux_dataout;
	wire	wire_l1_w0_n7_mux_dataout;
	wire	wire_l1_w1_n0_mux_dataout;
	wire	wire_l1_w1_n1_mux_dataout;
	wire	wire_l1_w1_n2_mux_dataout;
	wire	wire_l1_w1_n3_mux_dataout;
	wire	wire_l1_w1_n4_mux_dataout;
	wire	wire_l1_w1_n5_mux_dataout;
	wire	wire_l1_w1_n6_mux_dataout;
	wire	wire_l1_w1_n7_mux_dataout;
	wire	wire_l1_w2_n0_mux_dataout;
	wire	wire_l1_w2_n1_mux_dataout;
	wire	wire_l1_w2_n2_mux_dataout;
	wire	wire_l1_w2_n3_mux_dataout;
	wire	wire_l1_w2_n4_mux_dataout;
	wire	wire_l1_w2_n5_mux_dataout;
	wire	wire_l1_w2_n6_mux_dataout;
	wire	wire_l1_w2_n7_mux_dataout;
	wire	wire_l1_w3_n0_mux_dataout;
	wire	wire_l1_w3_n1_mux_dataout;
	wire	wire_l1_w3_n2_mux_dataout;
	wire	wire_l1_w3_n3_mux_dataout;
	wire	wire_l1_w3_n4_mux_dataout;
	wire	wire_l1_w3_n5_mux_dataout;
	wire	wire_l1_w3_n6_mux_dataout;
	wire	wire_l1_w3_n7_mux_dataout;
	wire	wire_l1_w4_n0_mux_dataout;
	wire	wire_l1_w4_n1_mux_dataout;
	wire	wire_l1_w4_n2_mux_dataout;
	wire	wire_l1_w4_n3_mux_dataout;
	wire	wire_l1_w4_n4_mux_dataout;
	wire	wire_l1_w4_n5_mux_dataout;
	wire	wire_l1_w4_n6_mux_dataout;
	wire	wire_l1_w4_n7_mux_dataout;
	wire	wire_l1_w5_n0_mux_dataout;
	wire	wire_l1_w5_n1_mux_dataout;
	wire	wire_l1_w5_n2_mux_dataout;
	wire	wire_l1_w5_n3_mux_dataout;
	wire	wire_l1_w5_n4_mux_dataout;
	wire	wire_l1_w5_n5_mux_dataout;
	wire	wire_l1_w5_n6_mux_dataout;
	wire	wire_l1_w5_n7_mux_dataout;
	wire	wire_l1_w6_n0_mux_dataout;
	wire	wire_l1_w6_n1_mux_dataout;
	wire	wire_l1_w6_n2_mux_dataout;
	wire	wire_l1_w6_n3_mux_dataout;
	wire	wire_l1_w6_n4_mux_dataout;
	wire	wire_l1_w6_n5_mux_dataout;
	wire	wire_l1_w6_n6_mux_dataout;
	wire	wire_l1_w6_n7_mux_dataout;
	wire	wire_l1_w7_n0_mux_dataout;
	wire	wire_l1_w7_n1_mux_dataout;
	wire	wire_l1_w7_n2_mux_dataout;
	wire	wire_l1_w7_n3_mux_dataout;
	wire	wire_l1_w7_n4_mux_dataout;
	wire	wire_l1_w7_n5_mux_dataout;
	wire	wire_l1_w7_n6_mux_dataout;
	wire	wire_l1_w7_n7_mux_dataout;
	wire	wire_l1_w8_n0_mux_dataout;
	wire	wire_l1_w8_n1_mux_dataout;
	wire	wire_l1_w8_n2_mux_dataout;
	wire	wire_l1_w8_n3_mux_dataout;
	wire	wire_l1_w8_n4_mux_dataout;
	wire	wire_l1_w8_n5_mux_dataout;
	wire	wire_l1_w8_n6_mux_dataout;
	wire	wire_l1_w8_n7_mux_dataout;
	wire	wire_l2_w0_n0_mux_dataout;
	wire	wire_l2_w0_n1_mux_dataout;
	wire	wire_l2_w0_n2_mux_dataout;
	wire	wire_l2_w0_n3_mux_dataout;
	wire	wire_l2_w1_n0_mux_dataout;
	wire	wire_l2_w1_n1_mux_dataout;
	wire	wire_l2_w1_n2_mux_dataout;
	wire	wire_l2_w1_n3_mux_dataout;
	wire	wire_l2_w2_n0_mux_dataout;
	wire	wire_l2_w2_n1_mux_dataout;
	wire	wire_l2_w2_n2_mux_dataout;
	wire	wire_l2_w2_n3_mux_dataout;
	wire	wire_l2_w3_n0_mux_dataout;
	wire	wire_l2_w3_n1_mux_dataout;
	wire	wire_l2_w3_n2_mux_dataout;
	wire	wire_l2_w3_n3_mux_dataout;
	wire	wire_l2_w4_n0_mux_dataout;
	wire	wire_l2_w4_n1_mux_dataout;
	wire	wire_l2_w4_n2_mux_dataout;
	wire	wire_l2_w4_n3_mux_dataout;
	wire	wire_l2_w5_n0_mux_dataout;
	wire	wire_l2_w5_n1_mux_dataout;
	wire	wire_l2_w5_n2_mux_dataout;
	wire	wire_l2_w5_n3_mux_dataout;
	wire	wire_l2_w6_n0_mux_dataout;
	wire	wire_l2_w6_n1_mux_dataout;
	wire	wire_l2_w6_n2_mux_dataout;
	wire	wire_l2_w6_n3_mux_dataout;
	wire	wire_l2_w7_n0_mux_dataout;
	wire	wire_l2_w7_n1_mux_dataout;
	wire	wire_l2_w7_n2_mux_dataout;
	wire	wire_l2_w7_n3_mux_dataout;
	wire	wire_l2_w8_n0_mux_dataout;
	wire	wire_l2_w8_n1_mux_dataout;
	wire	wire_l2_w8_n2_mux_dataout;
	wire	wire_l2_w8_n3_mux_dataout;
	wire	wire_l3_w0_n0_mux_dataout;
	wire	wire_l3_w0_n1_mux_dataout;
	wire	wire_l3_w1_n0_mux_dataout;
	wire	wire_l3_w1_n1_mux_dataout;
	wire	wire_l3_w2_n0_mux_dataout;
	wire	wire_l3_w2_n1_mux_dataout;
	wire	wire_l3_w3_n0_mux_dataout;
	wire	wire_l3_w3_n1_mux_dataout;
	wire	wire_l3_w4_n0_mux_dataout;
	wire	wire_l3_w4_n1_mux_dataout;
	wire	wire_l3_w5_n0_mux_dataout;
	wire	wire_l3_w5_n1_mux_dataout;
	wire	wire_l3_w6_n0_mux_dataout;
	wire	wire_l3_w6_n1_mux_dataout;
	wire	wire_l3_w7_n0_mux_dataout;
	wire	wire_l3_w7_n1_mux_dataout;
	wire	wire_l3_w8_n0_mux_dataout;
	wire	wire_l3_w8_n1_mux_dataout;
	wire	wire_l4_w0_n0_mux_dataout;
	wire	wire_l4_w1_n0_mux_dataout;
	wire	wire_l4_w2_n0_mux_dataout;
	wire	wire_l4_w3_n0_mux_dataout;
	wire	wire_l4_w4_n0_mux_dataout;
	wire	wire_l4_w5_n0_mux_dataout;
	wire	wire_l4_w6_n0_mux_dataout;
	wire	wire_l4_w7_n0_mux_dataout;
	wire	wire_l4_w8_n0_mux_dataout;
	wire  [269:0]  data_wire;
	wire  [8:0]  result_wire_ext;
	wire  [15:0]  sel_wire;

	assign		wire_l1_w0_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[9] : data_wire[0];
	assign		wire_l1_w0_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[27] : data_wire[18];
	assign		wire_l1_w0_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[45] : data_wire[36];
	assign		wire_l1_w0_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[63] : data_wire[54];
	assign		wire_l1_w0_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[81] : data_wire[72];
	assign		wire_l1_w0_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[99] : data_wire[90];
	assign		wire_l1_w0_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[117] : data_wire[108];
	assign		wire_l1_w0_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[135] : data_wire[126];
	assign		wire_l1_w1_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[10] : data_wire[1];
	assign		wire_l1_w1_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[28] : data_wire[19];
	assign		wire_l1_w1_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[46] : data_wire[37];
	assign		wire_l1_w1_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[64] : data_wire[55];
	assign		wire_l1_w1_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[82] : data_wire[73];
	assign		wire_l1_w1_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[100] : data_wire[91];
	assign		wire_l1_w1_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[118] : data_wire[109];
	assign		wire_l1_w1_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[136] : data_wire[127];
	assign		wire_l1_w2_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[11] : data_wire[2];
	assign		wire_l1_w2_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[29] : data_wire[20];
	assign		wire_l1_w2_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[47] : data_wire[38];
	assign		wire_l1_w2_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[65] : data_wire[56];
	assign		wire_l1_w2_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[83] : data_wire[74];
	assign		wire_l1_w2_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[101] : data_wire[92];
	assign		wire_l1_w2_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[119] : data_wire[110];
	assign		wire_l1_w2_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[137] : data_wire[128];
	assign		wire_l1_w3_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[12] : data_wire[3];
	assign		wire_l1_w3_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[30] : data_wire[21];
	assign		wire_l1_w3_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[48] : data_wire[39];
	assign		wire_l1_w3_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[66] : data_wire[57];
	assign		wire_l1_w3_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[84] : data_wire[75];
	assign		wire_l1_w3_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[102] : data_wire[93];
	assign		wire_l1_w3_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[120] : data_wire[111];
	assign		wire_l1_w3_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[138] : data_wire[129];
	assign		wire_l1_w4_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[13] : data_wire[4];
	assign		wire_l1_w4_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[31] : data_wire[22];
	assign		wire_l1_w4_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[49] : data_wire[40];
	assign		wire_l1_w4_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[67] : data_wire[58];
	assign		wire_l1_w4_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[85] : data_wire[76];
	assign		wire_l1_w4_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[103] : data_wire[94];
	assign		wire_l1_w4_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[121] : data_wire[112];
	assign		wire_l1_w4_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[139] : data_wire[130];
	assign		wire_l1_w5_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[14] : data_wire[5];
	assign		wire_l1_w5_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[32] : data_wire[23];
	assign		wire_l1_w5_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[50] : data_wire[41];
	assign		wire_l1_w5_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[68] : data_wire[59];
	assign		wire_l1_w5_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[86] : data_wire[77];
	assign		wire_l1_w5_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[104] : data_wire[95];
	assign		wire_l1_w5_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[122] : data_wire[113];
	assign		wire_l1_w5_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[140] : data_wire[131];
	assign		wire_l1_w6_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[15] : data_wire[6];
	assign		wire_l1_w6_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[33] : data_wire[24];
	assign		wire_l1_w6_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[51] : data_wire[42];
	assign		wire_l1_w6_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[69] : data_wire[60];
	assign		wire_l1_w6_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[87] : data_wire[78];
	assign		wire_l1_w6_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[105] : data_wire[96];
	assign		wire_l1_w6_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[123] : data_wire[114];
	assign		wire_l1_w6_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[141] : data_wire[132];
	assign		wire_l1_w7_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[16] : data_wire[7];
	assign		wire_l1_w7_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[34] : data_wire[25];
	assign		wire_l1_w7_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[52] : data_wire[43];
	assign		wire_l1_w7_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[70] : data_wire[61];
	assign		wire_l1_w7_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[88] : data_wire[79];
	assign		wire_l1_w7_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[106] : data_wire[97];
	assign		wire_l1_w7_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[124] : data_wire[115];
	assign		wire_l1_w7_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[142] : data_wire[133];
	assign		wire_l1_w8_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[17] : data_wire[8];
	assign		wire_l1_w8_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[35] : data_wire[26];
	assign		wire_l1_w8_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[53] : data_wire[44];
	assign		wire_l1_w8_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[71] : data_wire[62];
	assign		wire_l1_w8_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[89] : data_wire[80];
	assign		wire_l1_w8_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[107] : data_wire[98];
	assign		wire_l1_w8_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[125] : data_wire[116];
	assign		wire_l1_w8_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[143] : data_wire[134];
	assign		wire_l2_w0_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[145] : data_wire[144];
	assign		wire_l2_w0_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[147] : data_wire[146];
	assign		wire_l2_w0_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[149] : data_wire[148];
	assign		wire_l2_w0_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[151] : data_wire[150];
	assign		wire_l2_w1_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[153] : data_wire[152];
	assign		wire_l2_w1_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[155] : data_wire[154];
	assign		wire_l2_w1_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[157] : data_wire[156];
	assign		wire_l2_w1_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[159] : data_wire[158];
	assign		wire_l2_w2_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[161] : data_wire[160];
	assign		wire_l2_w2_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[163] : data_wire[162];
	assign		wire_l2_w2_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[165] : data_wire[164];
	assign		wire_l2_w2_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[167] : data_wire[166];
	assign		wire_l2_w3_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[169] : data_wire[168];
	assign		wire_l2_w3_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[171] : data_wire[170];
	assign		wire_l2_w3_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[173] : data_wire[172];
	assign		wire_l2_w3_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[175] : data_wire[174];
	assign		wire_l2_w4_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[177] : data_wire[176];
	assign		wire_l2_w4_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[179] : data_wire[178];
	assign		wire_l2_w4_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[181] : data_wire[180];
	assign		wire_l2_w4_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[183] : data_wire[182];
	assign		wire_l2_w5_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[185] : data_wire[184];
	assign		wire_l2_w5_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[187] : data_wire[186];
	assign		wire_l2_w5_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[189] : data_wire[188];
	assign		wire_l2_w5_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[191] : data_wire[190];
	assign		wire_l2_w6_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[193] : data_wire[192];
	assign		wire_l2_w6_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[195] : data_wire[194];
	assign		wire_l2_w6_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[197] : data_wire[196];
	assign		wire_l2_w6_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[199] : data_wire[198];
	assign		wire_l2_w7_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[201] : data_wire[200];
	assign		wire_l2_w7_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[203] : data_wire[202];
	assign		wire_l2_w7_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[205] : data_wire[204];
	assign		wire_l2_w7_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[207] : data_wire[206];
	assign		wire_l2_w8_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[209] : data_wire[208];
	assign		wire_l2_w8_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[211] : data_wire[210];
	assign		wire_l2_w8_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[213] : data_wire[212];
	assign		wire_l2_w8_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[215] : data_wire[214];
	assign		wire_l3_w0_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[217] : data_wire[216];
	assign		wire_l3_w0_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[219] : data_wire[218];
	assign		wire_l3_w1_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[221] : data_wire[220];
	assign		wire_l3_w1_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[223] : data_wire[222];
	assign		wire_l3_w2_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[225] : data_wire[224];
	assign		wire_l3_w2_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[227] : data_wire[226];
	assign		wire_l3_w3_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[229] : data_wire[228];
	assign		wire_l3_w3_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[231] : data_wire[230];
	assign		wire_l3_w4_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[233] : data_wire[232];
	assign		wire_l3_w4_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[235] : data_wire[234];
	assign		wire_l3_w5_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[237] : data_wire[236];
	assign		wire_l3_w5_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[239] : data_wire[238];
	assign		wire_l3_w6_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[241] : data_wire[240];
	assign		wire_l3_w6_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[243] : data_wire[242];
	assign		wire_l3_w7_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[245] : data_wire[244];
	assign		wire_l3_w7_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[247] : data_wire[246];
	assign		wire_l3_w8_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[249] : data_wire[248];
	assign		wire_l3_w8_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[251] : data_wire[250];
	assign		wire_l4_w0_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[253] : data_wire[252];
	assign		wire_l4_w1_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[255] : data_wire[254];
	assign		wire_l4_w2_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[257] : data_wire[256];
	assign		wire_l4_w3_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[259] : data_wire[258];
	assign		wire_l4_w4_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[261] : data_wire[260];
	assign		wire_l4_w5_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[263] : data_wire[262];
	assign		wire_l4_w6_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[265] : data_wire[264];
	assign		wire_l4_w7_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[267] : data_wire[266];
	assign		wire_l4_w8_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[269] : data_wire[268];
	assign
		data_wire = {wire_l3_w8_n1_mux_dataout, wire_l3_w8_n0_mux_dataout, wire_l3_w7_n1_mux_dataout, wire_l3_w7_n0_mux_dataout, wire_l3_w6_n1_mux_dataout, wire_l3_w6_n0_mux_dataout, wire_l3_w5_n1_mux_dataout, wire_l3_w5_n0_mux_dataout, wire_l3_w4_n1_mux_dataout, wire_l3_w4_n0_mux_dataout, wire_l3_w3_n1_mux_dataout, wire_l3_w3_n0_mux_dataout, wire_l3_w2_n1_mux_dataout, wire_l3_w2_n0_mux_dataout, wire_l3_w1_n1_mux_dataout, wire_l3_w1_n0_mux_dataout, wire_l3_w0_n1_mux_dataout, wire_l3_w0_n0_mux_dataout, wire_l2_w8_n3_mux_dataout, wire_l2_w8_n2_mux_dataout, wire_l2_w8_n1_mux_dataout, wire_l2_w8_n0_mux_dataout, wire_l2_w7_n3_mux_dataout, wire_l2_w7_n2_mux_dataout, wire_l2_w7_n1_mux_dataout, wire_l2_w7_n0_mux_dataout, wire_l2_w6_n3_mux_dataout, wire_l2_w6_n2_mux_dataout, wire_l2_w6_n1_mux_dataout, wire_l2_w6_n0_mux_dataout, wire_l2_w5_n3_mux_dataout, wire_l2_w5_n2_mux_dataout, wire_l2_w5_n1_mux_dataout, wire_l2_w5_n0_mux_dataout, wire_l2_w4_n3_mux_dataout, wire_l2_w4_n2_mux_dataout, wire_l2_w4_n1_mux_dataout, wire_l2_w4_n0_mux_dataout, wire_l2_w3_n3_mux_dataout, wire_l2_w3_n2_mux_dataout, wire_l2_w3_n1_mux_dataout, wire_l2_w3_n0_mux_dataout, wire_l2_w2_n3_mux_dataout, wire_l2_w2_n2_mux_dataout, wire_l2_w2_n1_mux_dataout, wire_l2_w2_n0_mux_dataout, wire_l2_w1_n3_mux_dataout, wire_l2_w1_n2_mux_dataout, wire_l2_w1_n1_mux_dataout, wire_l2_w1_n0_mux_dataout, wire_l2_w0_n3_mux_dataout, wire_l2_w0_n2_mux_dataout, wire_l2_w0_n1_mux_dataout, wire_l2_w0_n0_mux_dataout, wire_l1_w8_n7_mux_dataout, wire_l1_w8_n6_mux_dataout, wire_l1_w8_n5_mux_dataout, wire_l1_w8_n4_mux_dataout, wire_l1_w8_n3_mux_dataout, wire_l1_w8_n2_mux_dataout, wire_l1_w8_n1_mux_dataout, wire_l1_w8_n0_mux_dataout, wire_l1_w7_n7_mux_dataout, wire_l1_w7_n6_mux_dataout, wire_l1_w7_n5_mux_dataout, wire_l1_w7_n4_mux_dataout, wire_l1_w7_n3_mux_dataout, wire_l1_w7_n2_mux_dataout, wire_l1_w7_n1_mux_dataout, wire_l1_w7_n0_mux_dataout, wire_l1_w6_n7_mux_dataout, wire_l1_w6_n6_mux_dataout, wire_l1_w6_n5_mux_dataout, wire_l1_w6_n4_mux_dataout, wire_l1_w6_n3_mux_dataout, wire_l1_w6_n2_mux_dataout
, wire_l1_w6_n1_mux_dataout, wire_l1_w6_n0_mux_dataout, wire_l1_w5_n7_mux_dataout, wire_l1_w5_n6_mux_dataout, wire_l1_w5_n5_mux_dataout, wire_l1_w5_n4_mux_dataout, wire_l1_w5_n3_mux_dataout, wire_l1_w5_n2_mux_dataout, wire_l1_w5_n1_mux_dataout, wire_l1_w5_n0_mux_dataout, wire_l1_w4_n7_mux_dataout, wire_l1_w4_n6_mux_dataout, wire_l1_w4_n5_mux_dataout, wire_l1_w4_n4_mux_dataout, wire_l1_w4_n3_mux_dataout, wire_l1_w4_n2_mux_dataout, wire_l1_w4_n1_mux_dataout, wire_l1_w4_n0_mux_dataout, wire_l1_w3_n7_mux_dataout, wire_l1_w3_n6_mux_dataout, wire_l1_w3_n5_mux_dataout, wire_l1_w3_n4_mux_dataout, wire_l1_w3_n3_mux_dataout, wire_l1_w3_n2_mux_dataout, wire_l1_w3_n1_mux_dataout, wire_l1_w3_n0_mux_dataout, wire_l1_w2_n7_mux_dataout, wire_l1_w2_n6_mux_dataout, wire_l1_w2_n5_mux_dataout, wire_l1_w2_n4_mux_dataout, wire_l1_w2_n3_mux_dataout, wire_l1_w2_n2_mux_dataout, wire_l1_w2_n1_mux_dataout, wire_l1_w2_n0_mux_dataout, wire_l1_w1_n7_mux_dataout, wire_l1_w1_n6_mux_dataout, wire_l1_w1_n5_mux_dataout, wire_l1_w1_n4_mux_dataout, wire_l1_w1_n3_mux_dataout, wire_l1_w1_n2_mux_dataout, wire_l1_w1_n1_mux_dataout, wire_l1_w1_n0_mux_dataout, wire_l1_w0_n7_mux_dataout, wire_l1_w0_n6_mux_dataout, wire_l1_w0_n5_mux_dataout, wire_l1_w0_n4_mux_dataout, wire_l1_w0_n3_mux_dataout, wire_l1_w0_n2_mux_dataout, wire_l1_w0_n1_mux_dataout, wire_l1_w0_n0_mux_dataout, {54{1'b0}}, data},
		result = result_wire_ext,
		result_wire_ext = {wire_l4_w8_n0_mux_dataout, wire_l4_w7_n0_mux_dataout, wire_l4_w6_n0_mux_dataout, wire_l4_w5_n0_mux_dataout, wire_l4_w4_n0_mux_dataout, wire_l4_w3_n0_mux_dataout, wire_l4_w2_n0_mux_dataout, wire_l4_w1_n0_mux_dataout, wire_l4_w0_n0_mux_dataout},
		sel_wire = {sel[3], {4{1'b0}}, sel[2], {4{1'b0}}, sel[1], {4{1'b0}}, sel[0]};
endmodule //k_mux
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module k (
	data0x,
	data1x,
	data2x,
	data3x,
	data4x,
	data5x,
	data6x,
	data7x,
	data8x,
	data9x,
	sel,
	result)/* synthesis synthesis_clearbox = 1 */;

	input	[8:0]  data0x;
	input	[8:0]  data1x;
	input	[8:0]  data2x;
	input	[8:0]  data3x;
	input	[8:0]  data4x;
	input	[8:0]  data5x;
	input	[8:0]  data6x;
	input	[8:0]  data7x;
	input	[8:0]  data8x;
	input	[8:0]  data9x;
	input	[3:0]  sel;
	output	[8:0]  result;

	wire [8:0] sub_wire11;
	wire [8:0] sub_wire10 = data0x[8:0];
	wire [8:0] sub_wire9 = data1x[8:0];
	wire [8:0] sub_wire8 = data2x[8:0];
	wire [8:0] sub_wire7 = data3x[8:0];
	wire [8:0] sub_wire6 = data4x[8:0];
	wire [8:0] sub_wire5 = data5x[8:0];
	wire [8:0] sub_wire4 = data6x[8:0];
	wire [8:0] sub_wire3 = data7x[8:0];
	wire [8:0] sub_wire2 = data8x[8:0];
	wire [8:0] sub_wire0 = data9x[8:0];
	wire [89:0] sub_wire1 = {sub_wire10, sub_wire9, sub_wire8, sub_wire7, sub_wire6, sub_wire5, sub_wire4, sub_wire3, sub_wire2, sub_wire0};
	wire [8:0] result = sub_wire11[8:0];

	k_mux	k_mux_component (
				.data (sub_wire1),
				.sel (sel),
				.result (sub_wire11));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone V"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "1"
// Retrieval info: PRIVATE: new_diagram STRING "1"
// Retrieval info: LIBRARY: lpm lpm.lpm_components.all
// Retrieval info: CONSTANT: LPM_SIZE NUMERIC "10"
// Retrieval info: CONSTANT: LPM_TYPE STRING "LPM_MUX"
// Retrieval info: CONSTANT: LPM_WIDTH NUMERIC "9"
// Retrieval info: CONSTANT: LPM_WIDTHS NUMERIC "4"
// Retrieval info: USED_PORT: data0x 0 0 9 0 INPUT NODEFVAL "data0x[8..0]"
// Retrieval info: USED_PORT: data1x 0 0 9 0 INPUT NODEFVAL "data1x[8..0]"
// Retrieval info: USED_PORT: data2x 0 0 9 0 INPUT NODEFVAL "data2x[8..0]"
// Retrieval info: USED_PORT: data3x 0 0 9 0 INPUT NODEFVAL "data3x[8..0]"
// Retrieval info: USED_PORT: data4x 0 0 9 0 INPUT NODEFVAL "data4x[8..0]"
// Retrieval info: USED_PORT: data5x 0 0 9 0 INPUT NODEFVAL "data5x[8..0]"
// Retrieval info: USED_PORT: data6x 0 0 9 0 INPUT NODEFVAL "data6x[8..0]"
// Retrieval info: USED_PORT: data7x 0 0 9 0 INPUT NODEFVAL "data7x[8..0]"
// Retrieval info: USED_PORT: data8x 0 0 9 0 INPUT NODEFVAL "data8x[8..0]"
// Retrieval info: USED_PORT: data9x 0 0 9 0 INPUT NODEFVAL "data9x[8..0]"
// Retrieval info: USED_PORT: result 0 0 9 0 OUTPUT NODEFVAL "result[8..0]"
// Retrieval info: USED_PORT: sel 0 0 4 0 INPUT NODEFVAL "sel[3..0]"
// Retrieval info: CONNECT: @data 1 0 9 0 data0x 0 0 9 0
// Retrieval info: CONNECT: @data 1 1 9 0 data1x 0 0 9 0
// Retrieval info: CONNECT: @data 1 2 9 0 data2x 0 0 9 0
// Retrieval info: CONNECT: @data 1 3 9 0 data3x 0 0 9 0
// Retrieval info: CONNECT: @data 1 4 9 0 data4x 0 0 9 0
// Retrieval info: CONNECT: @data 1 5 9 0 data5x 0 0 9 0
// Retrieval info: CONNECT: @data 1 6 9 0 data6x 0 0 9 0
// Retrieval info: CONNECT: @data 1 7 9 0 data7x 0 0 9 0
// Retrieval info: CONNECT: @data 1 8 9 0 data8x 0 0 9 0
// Retrieval info: CONNECT: @data 1 9 9 0 data9x 0 0 9 0
// Retrieval info: CONNECT: @sel 0 0 4 0 sel 0 0 4 0
// Retrieval info: CONNECT: result 0 0 9 0 @result 0 0 9 0
// Retrieval info: GEN_FILE: TYPE_NORMAL k.vhd TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL k.inc FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL k.cmp TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL k.bsf TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL k_inst.vhd FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL k_syn.v TRUE
// Retrieval info: LIB_FILE: lpm
